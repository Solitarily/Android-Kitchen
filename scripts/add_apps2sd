############################################################################
#
# 本定制工具完全免费，由DsiXDA开发，由“ 半指遮天 ”完成汉化翻译。
#
#     我的新浪微博：      http://weibo.com/hqapk
#     我的腾讯微博：      http://t.qq.com/hqapkcom
#
############################################################################


scripts/check_galaxies

if [ "$?" == "1" ]
then
  clear
  echo
  echo " 本定制工具不支持此ROM"
  exit 0
fi

if [ "$1" == "" ]
then
  clear

elif [ "$1" == "show_help" ]
then

  clear
  echo "       =  提醒  =      "
  echo "-----------------------------------------------------------------"
  echo  
  echo "   Apps2SD 是一种功能，将允许所有应用程序可以安装到 SD 卡内，"
  echo "  以节省你设备上的存储空间；此功能适用于内部存储较小的设备，"
  echo "  如果你的设备拥有较大的内部存储（例如ONE X）那么不需要这个功能"
  echo " （实际使用中可能此功能会占用机器内存，大存储设备不建议使用）"
  echo
  echo "  厨房使用 Darktremor Apps2SD 方法，请确保您的存储卡有较快速度"
  echo "  （例如Class 6）, 使用适合文件系统的分区最好是 EXT3"
  echo "  通常并不需要 Swap 分区"
  echo
  echo "-----------------------------------------------------------------"
  echo

fi

device_name=`scripts/get_device_name`
change_mnt=`scripts/get_edify_def_val $device_name change_mnt`
change_mnt_dell=`scripts/get_edify_def_val $device_name change_mnt_dell`

if [ -e tools/edify_defs/$device_name ]
then
  if [ "$change_mnt" != "UNKNOWN" ] || [ "$change_mnt_dell" != "UNKNOWN" ]
  then
    echo " 警告: 此设备 ($device_name)  很可能不支持 Apps2SD！"
    echo
  fi
fi


echo -n " 继续安装 Apps2SD (y/n)? (默认: y): "
read do_apps2sd

if [ "$do_apps2sd" == "n" ]
then
  exit 0
fi

echo

if [ -d WORKING_* ]
then

  cd WORKING_*

  if [ ! -e META-INF/com/google/android/update-script ]
  then
    echo " 错误: update-script 脚本找不到"
    cd ..
    exit 0
  fi

  su_path=`find . -name su`

  if [ "$su_path" == "" ]
  then
    echo "       = 提醒 =       "
    echo "----------------------------------------------"
    echo "  工作文件夹下找不到 SU 二进制文件！"
    echo "  首先你必须 ROOT 你的 ROM"
    cd ..
    exit 0
  else

    echo
    echo " 发现 $su_path"

    cd .. 
    scripts/a2sd_exists

    if [ "$?" == "1" ]
    then
      echo
      echo " Apps2SD 安装成功"
      scripts/add_cachesd_to_update_script
      exit 0
    fi

  fi

else
  echo
  echo  ARET团队提醒：找不到工作文件夹，你需要创建一个。
  exit 0
fi


scripts/ensure_boot_extracted

if [ -d BOOT-EXTRACTED ]
then
  if [ -d WORKING_* ]
  then
    echo
  else
    exit 0
  fi
else
  exit 0
fi

if [ -d BOOT-EXTRACTED/boot.img-ramdisk ]
then
  cd BOOT-EXTRACTED/boot.img-ramdisk
else
  echo " 错误: 找不到 BOOT-EXTRACTED/boot.img-ramdisk 文件夹"
  exit 0
fi

test_property=`grep -c "on property:cm.filesystem.ready=1" init.rc`
test_start_a2sd=`grep -c "start a2sd" init.rc`
test_sysinit=`grep -c "start sysinit" init.rc`
test_cm_sysinit=`grep -c "exec /system/bin/sysinit" init.rc`

if [[ "$test_property" != "0" && "$test_start_a2sd" != "0" ]] || \
   [[ "$test_property" != "0" && "$test_sysinit" != "0" ]] || \
   [[ "$test_property" != "0" && "$test_cm_sysinit" != "0" ]] 
then
  echo " init.rc 中已经开启 a2sd"
  cd ../..
  echo 
  echo " 删除 BOOT-EXTRACTED 文件夹 ..."
  rm -rf BOOT-EXTRACTED

else

  echo
  echo  修改 ramdisk 中的 init.rc 开启 Apps2SD...


  if [ "$test_sysinit" != "0" ] 
  then
    sed -i -e 's/start sysinit/start sysinit\n    on property:cm.filesystem.ready=1/' init.rc 

  elif [ "$test_start_a2sd" != "0" ] && [ "$test_property" == "0" ]
  then
    sed -i -e 's/start a2sd/start a2sd\n    on property:cm.filesystem.ready=1/' init.rc 

  elif [ "$test_start_a2sd" == "0" ] && [ "$test_property" == "0" ]
  then
    sed -i -e 's/class_start default/start a2sd\n    on property:cm.filesystem.ready=1\n\n    class_start default/' init.rc
 
  elif [ "$test_start_a2sd" == "0" ] && [ "$test_property" != "0" ]
  then
    sed -i -e 's/on property:cm.filesystem.ready=1/start a2sd\n    on property:cm.filesystem.ready=1/' init.rc 
  fi

  test_service_a2sd=`grep -c "service a2sd" init.rc`
  test_service_sysinit=`grep -c "service sysinit" init.rc`

  if [ "$test_service_a2sd" == "0" ] && [ "$test_service_sysinit" == "0" ]
  then
    sed -i -e 's/service media /service a2sd \/system\/bin\/logwrapper \/system\/bin\/sh \/system\/bin\/a2sd\n    disabled\n    oneshot\n\nservice media /' init.rc
  fi

  cd ../..
  scripts/build_boot_img

fi

scripts/add_apps2sd_files
scripts/add_apps2sd_to_update_script
res=$?

if [ "$res" == "0" ]
then

  #
  # apps2sd 可能包括 Bash 二进制文件
  #
  find_cmd=`find tools/apps2sd_files -name bash`
  if [ "$find_cmd" != "" ]
  then
    scripts/add_bash_to_update_script
  fi

  #
  # 提示 busybox 运行方法
  #
  if [ "$test_sysinit" == "0" ] 
  then
    scripts/add_busybox_run_parts for_apps2sd
  fi

  #
  # Dalvik-cache to SD
  #
  scripts/add_cachesd_to_update_script

  echo
  echo 完成

fi
